@mixin unselectable{
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	*{
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}
}

@mixin placeholder {
	&::-webkit-input-placeholder{ @content; }
	&:-moz-placeholder{ 					@content; }
	&::-moz-placeholder{ 					@content; }
	&::-ms-input-placeholder{ 		@content; }
}

@mixin media($type) {
	$breakpoints: "sm", "md", "lg";
	$breakpoint_values: ("sm", $screen-sm), ("md", $screen-md), ("lg", $screen-lg);

	@if index($breakpoints, $type) {
		$picked: nth(nth($breakpoint_values, index($breakpoints, $type)), 2);
		@media (min-width: $picked) {
			@content;
		}
	} @else {
		@media (min-width: $type) {
			@content;
		}
	}
}

@mixin background-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin baseline-grid-overlay() {
  body:after{
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    height: 500%;
    width: 100%;
    z-index: 10000;
    @include debug-vertical-alignment;
    pointer-events: none;
  }
}

@mixin stripes($colors, $direction: "to bottom") {
    $stripe-width: 100% / length($colors);
    $auto:         if( type-of(nth($colors, 1)) == list, false, true );
    $gradient:     ();

    @for $i from 1 through length($colors) {
        $item: nth($colors, $i);
        $dump: ();

        @if $auto == true {
            $dump: $item $stripe-width * ($i - 1), $item $stripe-width * $i;
        }

        @else {
            @if $i > 1 {
                $previous-item: nth($colors, $i - 1);
                $dump: append($dump, nth($item, 1) nth($previous-item, 2));
            }
            $dump: append($dump, $item);
        }

        $gradient: join($gradient, $dump, comma);
    }

    @include background-image(linear-gradient($direction, $gradient));
}

@mixin underline($bg, $fg, $distance: 87%) {
  background-image:
    linear-gradient($bg, $bg),
    linear-gradient($bg, $bg),
    linear-gradient($fg, $fg);

  background-size:
    0.10em 0.01em,
    0.10em 0.07em,
    0.07em 0.07em;

  background-repeat:
    no-repeat,
    no-repeat,
    repeat-x;

  background-position-y:
    $distance,
    $distance,
    $distance;

  background-position-x:
    0%,
    100%,
    0%;

  text-shadow:
     0.10em  0.00em $bg,
     0.10em  0.02em $bg,
     0.10em  0.04em $bg,
     0.10em  0.06em $bg,
     0.10em  0.08em $bg,
     0.10em  0.10em $bg,
     0.08em  0.10em $bg,
     0.06em  0.10em $bg,
     0.04em  0.10em $bg,
     0.02em  0.10em $bg,
     0.00em  0.10em $bg,
    -0.02em  0.10em $bg,
    -0.04em  0.10em $bg,
    -0.06em  0.10em $bg,
    -0.08em  0.10em $bg,
    -0.10em  0.10em $bg,
    -0.10em  0.08em $bg,
    -0.10em  0.06em $bg,
    -0.10em  0.04em $bg,
    -0.10em  0.02em $bg,
    -0.10em  0.00em $bg,
    -0.10em  0.02em $bg,
    -0.10em  0.04em $bg,
    -0.10em -0.06em $bg,
    -0.10em -0.08em $bg,
    -0.10em -0.10em $bg,
    -0.08em -0.10em $bg,
    -0.06em -0.10em $bg,
    -0.04em -0.10em $bg,
    -0.02em -0.10em $bg,
     0.00em -0.10em $bg,
     0.02em -0.10em $bg,
     0.04em -0.10em $bg,
     0.06em -0.10em $bg,
     0.08em -0.10em $bg,
     0.10em -0.10em $bg,
     0.10em -0.08em $bg,
     0.10em -0.06em $bg,
     0.10em -0.04em $bg,
     0.10em -0.02em $bg;
}
